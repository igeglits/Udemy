При использовании переменных разных типов в выражениях, обязательно необходимо преобразовывать типы к одинаковым.

Для арифметических вычислений используйте арифметические выражения.

В случае выражения деления целых чисел, результат также будет целым. В этом случае остаток от деления теряется!

Особенность кодирования отрицательных чисел в компьютере такова, что если результат операции превышает количество разрядов в переменной, то результат может стать отрицательным. Например если при сложении двух положительных чисел получается отрицательный результат (чего не может быть согласно правилам школьной математике), то это значит что результат операции больше, чем место для хранения данных. В таком случае рекомендуется использовать типы с большим количество разрядов!

Особенности кодирования чисел с плавающей точкой иногда приводят к погрешностям вычисления, поэтому для вычислений, где ВАЖНА ТОЧНОСТЬ не рекомендуется использовать тип double (Для этих целей лучше использовать тип BigDecimal, особенность которого в том что он хранит данные в виде строки, таким образом исключается возможность погрешностей).

Логические операции: &&, ||, ! - позволяют строить логические выражения любой сложности.

Для обновления данных рекомендуется использовать операции обновления: присваивания, обновление с присваиванием, инкремент и декремент.

Префиксная и постфиксная формы отличаются только если они находятся в сложном выражении, для которого важно значение изменяемой переменной.

Благодаря заранее заданным приоритетам операторов, любое сложное выражение всегда однозначно интерпретируется. Для облегчения чтения сложного выражения рекомендуется использовать скобки.

При конкатенации строк с другими типами данных всегда используйте скобки, чтобы результат не зависел от ассоциативности операторов!

Приоритет и ассоциативность операций в Java: https://introcs.cs.princeton.edu/java/11precedence/.