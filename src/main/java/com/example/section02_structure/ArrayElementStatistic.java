package com.example.section02_structure;

public class ArrayElementStatistic {
    public static void main(String[] args) {
        int[] array = {5, 2, 3, 4, 4, 3, 3, 2, 2, 2, 2, 2};
        //var element = 0;

        for (int i = 0; i < 10; i++) {
            var count = 0.0;
            for (int i1 = 0; i1 < array.length; i1++) {
                if (i == array[i1]) {
                    count++;
                }
            }
            if (count != 0) {
                System.out.println(i + "=" + (count / array.length) * 100 + "%");
            }
        }
        System.out.println();
        System.out.println();
        //другое решение, под задание, дает неверный вывод на консоль
        var temp = 0;
        for (int i = 0; i < array.length; i++) {
            temp = array[i];
            var count = 0.0;
            for (int i1 = 0; i1 < array.length; i1++) {
                if (temp == array[i1]) {
                    count++;
                }
            }
            if (count != 0) {
                System.out.println(temp + "=" + (count / array.length) * 100 + "%");
            }
        }
        // как надо было сделать.
        /*
        Алгоритм:

Создаем массив, который будут хранить уникальные элементы исходного массива (массив unique) и массив, который будет хранить количество повторений уникального элемента в исходном массиве (массив counts).  Связь между этими массивами осуществляется по индексу, т.е. чтобы узнать количество повторений для уникального элемента, необходимо в массиве unique узнать индекс данного уникального элемента и по этому индексу запросить количество повторений в массиве counts;

Для хранения количества найденных уникальных элементов, необходимо создать переменную счетчик.

Выполняем проход по исходному массиву данных слева направо с помощью цикла;

Получаем текущий элемент по индексу i;

Проверяем если ли текущий элемент в массиве unique;

Если есть, значит для данного элемента уже было посчитано количество вхождений, поэтому переходим к следующему элементу в исходном массиве;

Если нет, то считаем сколько раз данный элемент встречался в массиве;

После подсчета добавляем запись в массивы unique и counts;

После того как мы закончили проход по исходному массиву, необходимо пройтись по массиву уникальных элементов и отобразить его и процент вхождения (Так как размер данных массивов изначально был задан большим, необходимо использовать счетчик уникальных элементов, чтобы отображать только результаты работы данной программы);

Процент вхождения рассчитывается как ((double)counts[i] * 100 / array.length)
         */
        System.out.println();
        int[] unique = new int[array.length];//массив будет содержать все данные из заданного массива в случае, если все числа в нем уникальные
        int[] counts = new int[array.length];// хранение результата счетчика для уникальных элементов, тоже может быть равен заданному, если все элементы уникальные, тогда все значения буду = 1
        int count = 0;
        for (int i = 0; i < array.length; i++) {
            var element = array[i];

            var exists = false;//проверяем, если ли такой элемент в созданном массиве unique, если есть то тру и брейк.
            for (int j = 0; j < count; j++) {//На первой итерации у нас count=0, не проверяем массив unique т.к. j=0 и условие j меньше count=0 выполняется. На второй итерации count 1, будет проверен индекс j=0 и т.д.
                if (unique[j] == element) {
                    exists = true;
                    break;
                }
            }
            if (!exists) { //а здесь мы обрабатываем уникальный элемент на счетчике.
                var number = 1;//элемент уникальный и ему присваивают счет равный 1.
                for (int j = i + 1; j < array.length; j++) //i+1 здесь потому, что слева от текущей позиции элемент уже был проверен и его там нет. Значит надо просмотреть элементы на повторение справа
                {
                    if (element == array[j]) {
                        number++;//счетчик
                    }
                }
                unique[count] = element;
                counts[count] = number;
                count++;
            }
        }
        for (int i = 0; i < count; i++) {
            System.out.println(unique[i] + "=" + ((double) counts[i] * 100 / array.length) + "%");
        }
    }

}


